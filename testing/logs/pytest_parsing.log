2025-01-20 18:21:59,985 - pytest_parsing - INFO - Testing parser: parse_geometry with file: C:\Users\s1834431\Code\fem_model\testing\tests\../../jobs/base\geometry.txt
2025-01-20 18:21:59,985 - pytest_parsing - INFO - 
--- parse_geometry Output ---
{'A': 0.05,
 'Ix': 0.00013,
 'Iy': 0.00024,
 'Iz': 0.00035,
 'J': 5.1e-05,
 'L': 8.0,
 'Sx': 0.15,
 'Sy': 0.25,
 'Sz': 0.35,
 'centroid_x': 0.1,
 'centroid_y': 0.2,
 'centroid_z': 0.0,
 'rx': 0.05,
 'ry': 0.07,
 'rz': 0.09,
 'torsional_constant': 4.1e-05}
2025-01-20 18:21:59,988 - pytest_parsing - INFO - Testing parser: parse_material with file: C:\Users\s1834431\Code\fem_model\testing\tests\../../jobs/base\material.txt
2025-01-20 18:21:59,989 - pytest_parsing - INFO - 
--- parse_material Output ---
{'E': 200000000000.0, 'G': 76923000000.0, 'nu': 0.3, 'rho': 7850.0}
2025-01-20 18:21:59,991 - pytest_parsing - INFO - Testing parser: parse_solver with file: C:\Users\s1834431\Code\fem_model\testing\tests\../../jobs/base\solver.txt
2025-01-20 18:21:59,992 - pytest_parsing - INFO - 
--- parse_solver Output ---
{'Dynamic': 'Off', 'Modal': 'Off', 'Static': 'Direct Solver (Dense)'}
2025-01-20 18:21:59,995 - pytest_parsing - INFO - Testing parser: parse_boundary_conditions with file: C:\Users\s1834431\Code\fem_model\testing\tests\../../jobs/base\geometry.txt
2025-01-20 18:21:59,996 - pytest_parsing - INFO - 
--- parse_boundary_conditions Output ---
array([[1, 1, 1, 1, 1, 1]])
2025-01-20 18:21:59,998 - pytest_parsing - INFO - Testing parser: parse_load with file: C:\Users\s1834431\Code\fem_model\testing\tests\../../jobs\job_0001\load.txt
2025-01-20 18:21:59,999 - pytest_parsing - INFO - 
--- parse_load Output ---
array([[   0., 1000.,    0.,    0.,    0.,    0.],
       [   0., 1000.,    0.,    0., 7000.,    0.],
       [   0., 1000.,    0.,    0.,    0.,    0.],
       [   0., 1000.,    0.,    0.,    0.,    0.],
       [2000., 1000.,    0.,    0.,    0.,    0.]])
2025-01-20 18:22:00,002 - pytest_parsing - INFO - Testing parser: parse_mesh with file: C:\Users\s1834431\Code\fem_model\testing\tests\../../jobs\job_0001\mesh.txt
2025-01-20 18:22:00,008 - pytest_parsing - INFO - 
--- parse_mesh Output ---
{'connectivity': [(1, 2),
                  (2, 3),
                  (3, 4),
                  (4, 5),
                  (5, 6),
                  (6, 7),
                  (7, 8),
                  (8, 9),
                  (9, 10),
                  (10, 11),
                  (11, 12),
                  (12, 13),
                  (13, 14),
                  (14, 15),
                  (15, 16),
                  (16, 17),
                  (17, 18),
                  (18, 19),
                  (19, 20),
                  (20, 21),
                  (21, 22),
                  (22, 23),
                  (23, 24),
                  (24, 25),
                  (25, 26),
                  (26, 27),
                  (27, 28),
                  (28, 29),
                  (29, 30),
                  (30, 31),
                  (31, 32),
                  (32, 33),
                  (33, 34),
                  (34, 35),
                  (35, 36),
                  (36, 37),
                  (37, 38),
                  (38, 39),
                  (39, 40),
                  (40, 41),
                  (41, 42),
                  (42, 43),
                  (43, 44),
                  (44, 45),
                  (45, 46),
                  (46, 47),
                  (47, 48),
                  (48, 49),
                  (49, 50),
                  (50, 51),
                  (51, 52),
                  (52, 53),
                  (53, 54),
                  (54, 55),
                  (55, 56),
                  (56, 57),
                  (57, 58),
                  (58, 59),
                  (59, 60),
                  (60, 61),
                  (61, 62),
                  (62, 63),
                  (63, 64),
                  (64, 65),
                  (65, 66),
                  (66, 67),
                  (67, 68),
                  (68, 69),
                  (69, 70),
                  (70, 71),
                  (71, 72),
                  (72, 73),
                  (73, 74),
                  (74, 75),
                  (75, 76),
                  (76, 77),
                  (77, 78),
                  (78, 79),
                  (79, 80),
                  (80, 81),
                  (81, 82),
                  (82, 83),
                  (83, 84),
                  (84, 85),
                  (85, 86),
                  (86, 87),
                  (87, 88),
                  (88, 89),
                  (89, 90),
                  (90, 91),
                  (91, 92),
                  (92, 93),
                  (93, 94),
                  (94, 95),
                  (95, 96),
                  (96, 97),
                  (97, 98),
                  (98, 99),
                  (99, 100),
                  (100, 101)],
 'element_lengths': {0: np.float64(0.003869),
                     1: np.float64(0.0077339999999999996),
                     2: np.float64(0.011592),
                     3: np.float64(0.015437000000000003),
                     4: np.float64(0.019269999999999995),
                     5: np.float64(0.023082),
                     6: np.float64(0.026872000000000007),
                     7: np.float64(0.030636999999999998),
                     8: np.float64(0.034371999999999986),
                     9: np.float64(0.038073000000000023),
                     10: np.float64(0.041738),
                     11: np.float64(0.04536299999999999),
                     12: np.float64(0.048943000000000014),
                     13: np.float64(0.05247599999999997),
                     14: np.float64(0.05595800000000001),
                     15: np.float64(0.05938699999999997),
                     16: np.float64(0.06275700000000006),
                     17: np.float64(0.06606800000000002),
                     18: np.float64(0.06931299999999996),
                     19: np.float64(0.07249300000000003),
                     20: np.float64(0.07560100000000003),
                     21: np.float64(0.07863799999999999),
                     22: np.float64(0.08159700000000003),
                     23: np.float64(0.08447799999999983),
                     24: np.float64(0.08727700000000005),
                     25: np.float64(0.08999200000000007),
                     26: np.float64(0.092619),
                     27: np.float64(0.09515699999999994),
                     28: np.float64(0.0976030000000001),
                     29: np.float64(0.09995500000000002),
                     30: np.float64(0.102209),
                     31: np.float64(0.10436499999999982),
                     32: np.float64(0.1064210000000001),
                     33: np.float64(0.10837200000000013),
                     34: np.float64(0.11021899999999984),
                     35: np.float64(0.11195999999999984),
                     36: np.float64(0.11359200000000014),
                     37: np.float64(0.11511400000000016),
                     38: np.float64(0.11652599999999991),
                     39: np.float64(0.11782300000000001),
                     40: np.float64(0.119008),
                     41: np.float64(0.12007699999999977),
                     42: np.float64(0.12102900000000005),
                     43: np.float64(0.12186600000000025),
                     44: np.float64(0.12258300000000011),
                     45: np.float64(0.1231829999999996),
                     46: np.float64(0.12366300000000008),
                     47: np.float64(0.12402399999999991),
                     48: np.float64(0.12426400000000015),
                     49: np.float64(0.12438400000000005),
                     50: np.float64(0.12438400000000005),
                     51: np.float64(0.12426400000000015),
                     52: np.float64(0.12402399999999947),
                     53: np.float64(0.12366300000000052),
                     54: np.float64(0.12318300000000004),
                     55: np.float64(0.12258299999999966),
                     56: np.float64(0.12186599999999981),
                     57: np.float64(0.12102900000000005),
                     58: np.float64(0.12007700000000021),
                     59: np.float64(0.119008),
                     60: np.float64(0.11782300000000046),
                     61: np.float64(0.11652599999999946),
                     62: np.float64(0.11511400000000016),
                     63: np.float64(0.1135919999999997),
                     64: np.float64(0.11195999999999984),
                     65: np.float64(0.11021900000000073),
                     66: np.float64(0.10837199999999925),
                     67: np.float64(0.1064210000000001),
                     68: np.float64(0.10436500000000049),
                     69: np.float64(0.10220900000000022),
                     70: np.float64(0.09995499999999957),
                     71: np.float64(0.09760300000000033),
                     72: np.float64(0.09515699999999949),
                     73: np.float64(0.092619),
                     74: np.float64(0.08999200000000052),
                     75: np.float64(0.08727699999999938),
                     76: np.float64(0.08447800000000072),
                     77: np.float64(0.08159699999999948),
                     78: np.float64(0.07863799999999976),
                     79: np.float64(0.0756010000000007),
                     80: np.float64(0.0724929999999997),
                     81: np.float64(0.06931300000000018),
                     82: np.float64(0.06606799999999957),
                     83: np.float64(0.0627570000000004),
                     84: np.float64(0.05938700000000008),
                     85: np.float64(0.05595799999999951),
                     86: np.float64(0.05247600000000041),
                     87: np.float64(0.048942999999999515),
                     88: np.float64(0.04536300000000004),
                     89: np.float64(0.0417380000000005),
                     90: np.float64(0.0380729999999998),
                     91: np.float64(0.03437200000000029),
                     92: np.float64(0.03063699999999958),
                     93: np.float64(0.026872000000000007),
                     94: np.float64(0.02308200000000049),
                     95: np.float64(0.019269999999999676),
                     96: np.float64(0.015437000000000367),
                     97: np.float64(0.01159199999999938),
                     98: np.float64(0.00773400000000013),
                     99: np.float64(0.0038689999999999003)},
 'element_types': ['EulerBernoulliBeamElement'],
 'node_ids': [1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44,
              45,
              46,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              58,
              59,
              60,
              61,
              62,
              63,
              64,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              91,
              92,
              93,
              94,
              95,
              96,
              97,
              98,
              99,
              100,
              101],
 'node_positions': array([[9.670000e-04, 0.000000e+00, 0.000000e+00],
       [4.836000e-03, 0.000000e+00, 0.000000e+00],
       [1.257000e-02, 0.000000e+00, 0.000000e+00],
       [2.416200e-02, 0.000000e+00, 0.000000e+00],
       [3.959900e-02, 0.000000e+00, 0.000000e+00],
       [5.886900e-02, 0.000000e+00, 0.000000e+00],
       [8.195100e-02, 0.000000e+00, 0.000000e+00],
       [1.088230e-01, 0.000000e+00, 0.000000e+00],
       [1.394600e-01, 0.000000e+00, 0.000000e+00],
       [1.738320e-01, 0.000000e+00, 0.000000e+00],
       [2.119050e-01, 0.000000e+00, 0.000000e+00],
       [2.536430e-01, 0.000000e+00, 0.000000e+00],
       [2.990060e-01, 0.000000e+00, 0.000000e+00],
       [3.479490e-01, 0.000000e+00, 0.000000e+00],
       [4.004250e-01, 0.000000e+00, 0.000000e+00],
       [4.563830e-01, 0.000000e+00, 0.000000e+00],
       [5.157700e-01, 0.000000e+00, 0.000000e+00],
       [5.785270e-01, 0.000000e+00, 0.000000e+00],
       [6.445950e-01, 0.000000e+00, 0.000000e+00],
       [7.139080e-01, 0.000000e+00, 0.000000e+00],
       [7.864010e-01, 0.000000e+00, 0.000000e+00],
       [8.620020e-01, 0.000000e+00, 0.000000e+00],
       [9.406400e-01, 0.000000e+00, 0.000000e+00],
       [1.022237e+00, 0.000000e+00, 0.000000e+00],
       [1.106715e+00, 0.000000e+00, 0.000000e+00],
       [1.193992e+00, 0.000000e+00, 0.000000e+00],
       [1.283984e+00, 0.000000e+00, 0.000000e+00],
       [1.376603e+00, 0.000000e+00, 0.000000e+00],
       [1.471760e+00, 0.000000e+00, 0.000000e+00],
       [1.569363e+00, 0.000000e+00, 0.000000e+00],
       [1.669318e+00, 0.000000e+00, 0.000000e+00],
       [1.771527e+00, 0.000000e+00, 0.000000e+00],
       [1.875892e+00, 0.000000e+00, 0.000000e+00],
       [1.982313e+00, 0.000000e+00, 0.000000e+00],
       [2.090685e+00, 0.000000e+00, 0.000000e+00],
       [2.200904e+00, 0.000000e+00, 0.000000e+00],
       [2.312864e+00, 0.000000e+00, 0.000000e+00],
       [2.426456e+00, 0.000000e+00, 0.000000e+00],
       [2.541570e+00, 0.000000e+00, 0.000000e+00],
       [2.658096e+00, 0.000000e+00, 0.000000e+00],
       [2.775919e+00, 0.000000e+00, 0.000000e+00],
       [2.894927e+00, 0.000000e+00, 0.000000e+00],
       [3.015004e+00, 0.000000e+00, 0.000000e+00],
       [3.136033e+00, 0.000000e+00, 0.000000e+00],
       [3.257899e+00, 0.000000e+00, 0.000000e+00],
       [3.380482e+00, 0.000000e+00, 0.000000e+00],
       [3.503665e+00, 0.000000e+00, 0.000000e+00],
       [3.627328e+00, 0.000000e+00, 0.000000e+00],
       [3.751352e+00, 0.000000e+00, 0.000000e+00],
       [3.875616e+00, 0.000000e+00, 0.000000e+00],
       [4.000000e+00, 0.000000e+00, 0.000000e+00],
       [4.124384e+00, 0.000000e+00, 0.000000e+00],
       [4.248648e+00, 0.000000e+00, 0.000000e+00],
       [4.372672e+00, 0.000000e+00, 0.000000e+00],
       [4.496335e+00, 0.000000e+00, 0.000000e+00],
       [4.619518e+00, 0.000000e+00, 0.000000e+00],
       [4.742101e+00, 0.000000e+00, 0.000000e+00],
       [4.863967e+00, 0.000000e+00, 0.000000e+00],
       [4.984996e+00, 0.000000e+00, 0.000000e+00],
       [5.105073e+00, 0.000000e+00, 0.000000e+00],
       [5.224081e+00, 0.000000e+00, 0.000000e+00],
       [5.341904e+00, 0.000000e+00, 0.000000e+00],
       [5.458430e+00, 0.000000e+00, 0.000000e+00],
       [5.573544e+00, 0.000000e+00, 0.000000e+00],
       [5.687136e+00, 0.000000e+00, 0.000000e+00],
       [5.799096e+00, 0.000000e+00, 0.000000e+00],
       [5.909315e+00, 0.000000e+00, 0.000000e+00],
       [6.017687e+00, 0.000000e+00, 0.000000e+00],
       [6.124108e+00, 0.000000e+00, 0.000000e+00],
       [6.228473e+00, 0.000000e+00, 0.000000e+00],
       [6.330682e+00, 0.000000e+00, 0.000000e+00],
       [6.430637e+00, 0.000000e+00, 0.000000e+00],
       [6.528240e+00, 0.000000e+00, 0.000000e+00],
       [6.623397e+00, 0.000000e+00, 0.000000e+00],
       [6.716016e+00, 0.000000e+00, 0.000000e+00],
       [6.806008e+00, 0.000000e+00, 0.000000e+00],
       [6.893285e+00, 0.000000e+00, 0.000000e+00],
       [6.977763e+00, 0.000000e+00, 0.000000e+00],
       [7.059360e+00, 0.000000e+00, 0.000000e+00],
       [7.137998e+00, 0.000000e+00, 0.000000e+00],
       [7.213599e+00, 0.000000e+00, 0.000000e+00],
       [7.286092e+00, 0.000000e+00, 0.000000e+00],
       [7.355405e+00, 0.000000e+00, 0.000000e+00],
       [7.421473e+00, 0.000000e+00, 0.000000e+00],
       [7.484230e+00, 0.000000e+00, 0.000000e+00],
       [7.543617e+00, 0.000000e+00, 0.000000e+00],
       [7.599575e+00, 0.000000e+00, 0.000000e+00],
       [7.652051e+00, 0.000000e+00, 0.000000e+00],
       [7.700994e+00, 0.000000e+00, 0.000000e+00],
       [7.746357e+00, 0.000000e+00, 0.000000e+00],
       [7.788095e+00, 0.000000e+00, 0.000000e+00],
       [7.826168e+00, 0.000000e+00, 0.000000e+00],
       [7.860540e+00, 0.000000e+00, 0.000000e+00],
       [7.891177e+00, 0.000000e+00, 0.000000e+00],
       [7.918049e+00, 0.000000e+00, 0.000000e+00],
       [7.941131e+00, 0.000000e+00, 0.000000e+00],
       [7.960401e+00, 0.000000e+00, 0.000000e+00],
       [7.975838e+00, 0.000000e+00, 0.000000e+00],
       [7.987430e+00, 0.000000e+00, 0.000000e+00],
       [7.995164e+00, 0.000000e+00, 0.000000e+00],
       [7.999033e+00, 0.000000e+00, 0.000000e+00]])}
2025-01-20 18:22:00,026 - pytest_parsing - INFO - Comparing parse_geometry with ParserBase for C:\Users\s1834431\Code\fem_model\testing\tests\../../jobs/base\geometry.txt
2025-01-20 18:22:00,027 - pytest_parsing - INFO - 
--- ParserBase geometry Output ---
{'A': 0.05,
 'Ix': 0.00013,
 'Iy': 0.00024,
 'Iz': 0.00035,
 'J': 5.1e-05,
 'L': 8.0,
 'Sx': 0.15,
 'Sy': 0.25,
 'Sz': 0.35,
 'centroid_x': 0.1,
 'centroid_y': 0.2,
 'centroid_z': 0.0,
 'rx': 0.05,
 'ry': 0.07,
 'rz': 0.09,
 'torsional_constant': 4.1e-05}
2025-01-20 18:22:00,028 - pytest_parsing - INFO - 
--- Direct Function geometry Output ---
{'A': 0.05,
 'Ix': 0.00013,
 'Iy': 0.00024,
 'Iz': 0.00035,
 'J': 5.1e-05,
 'L': 8.0,
 'Sx': 0.15,
 'Sy': 0.25,
 'Sz': 0.35,
 'centroid_x': 0.1,
 'centroid_y': 0.2,
 'centroid_z': 0.0,
 'rx': 0.05,
 'ry': 0.07,
 'rz': 0.09,
 'torsional_constant': 4.1e-05}
2025-01-20 18:22:00,032 - pytest_parsing - INFO - Comparing parse_material with ParserBase for C:\Users\s1834431\Code\fem_model\testing\tests\../../jobs/base\material.txt
2025-01-20 18:22:00,033 - pytest_parsing - INFO - 
--- ParserBase material Output ---
{'E': 200000000000.0, 'G': 76923000000.0, 'nu': 0.3, 'rho': 7850.0}
2025-01-20 18:22:00,033 - pytest_parsing - INFO - 
--- Direct Function material Output ---
{'E': 200000000000.0, 'G': 76923000000.0, 'nu': 0.3, 'rho': 7850.0}
2025-01-20 18:22:00,036 - pytest_parsing - INFO - Comparing parse_solver with ParserBase for C:\Users\s1834431\Code\fem_model\testing\tests\../../jobs/base\solver.txt
2025-01-20 18:22:00,037 - pytest_parsing - INFO - 
--- ParserBase solver Output ---
{'Dynamic': 'Off', 'Modal': 'Off', 'Static': 'Direct Solver (Dense)'}
2025-01-20 18:22:00,038 - pytest_parsing - INFO - 
--- Direct Function solver Output ---
{'Dynamic': 'Off', 'Modal': 'Off', 'Static': 'Direct Solver (Dense)'}
2025-01-20 18:22:00,041 - pytest_parsing - INFO - Comparing parse_load with ParserBase for C:\Users\s1834431\Code\fem_model\testing\tests\../../jobs\job_0001\load.txt
2025-01-20 18:22:00,042 - pytest_parsing - INFO - 
--- ParserBase load Output ---
array([[   0., 1000.,    0.,    0.,    0.,    0.],
       [   0., 1000.,    0.,    0., 7000.,    0.],
       [   0., 1000.,    0.,    0.,    0.,    0.],
       [   0., 1000.,    0.,    0.,    0.,    0.],
       [2000., 1000.,    0.,    0.,    0.,    0.]])
2025-01-20 18:22:00,043 - pytest_parsing - INFO - 
--- Direct Function load Output ---
array([[   0., 1000.,    0.,    0.,    0.,    0.],
       [   0., 1000.,    0.,    0., 7000.,    0.],
       [   0., 1000.,    0.,    0.,    0.,    0.],
       [   0., 1000.,    0.,    0.,    0.,    0.],
       [2000., 1000.,    0.,    0.,    0.,    0.]])
2025-01-20 18:22:00,046 - pytest_parsing - INFO - Comparing parse_boundary_conditions with ParserBase for C:\Users\s1834431\Code\fem_model\testing\tests\../../jobs/base\geometry.txt
2025-01-20 18:22:00,047 - pytest_parsing - INFO - 
--- ParserBase boundary_conditions Output ---
array([[1, 1, 1, 1, 1, 1]])
2025-01-20 18:22:00,047 - pytest_parsing - INFO - 
--- Direct Function boundary_conditions Output ---
array([[1, 1, 1, 1, 1, 1]])
